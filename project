import re
import json

# Global variable to store contacts
contacts = {}

# File name for storing contacts
file_name = "contacts.json"

# Function to display the main menu
def display_menu():
    print("\nWelcome to the Contact Management System!")
    print("Menu:")
    print("1. Add a new contact")
    print("2. Edit an existing contact")
    print("3. Delete a contact")
    print("4. Search for a contact")
    print("5. Display all contacts")
    print("6. Export contacts to a text file")
    print("7. Import contacts from a text file")
    print("8. Quit")

# Function to add a new contact
def add_contact():
    print("\nAdding a new contact:")
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    additional_info = input("Enter additional information: ")

    # Validate phone number format using regex
    phone_pattern = re.compile(r'^\d{10}$')  # Assuming a 10-digit phone number
    if not re.match(phone_pattern, phone):
        print("Invalid phone number format. Please enter a 10-digit number.")
        return

    # Add contact to dictionary
    contacts[phone] = {'Name': name, 'Phone': phone, 'Email': email, 'Additional Info': additional_info}
    print("Contact added successfully!")

# Function to edit an existing contact
def edit_contact():
    print("\nEditing a contact:")
    phone = input("Enter phone number of the contact to edit: ")
    if phone in contacts:
        print("Contact found. Enter new details:")
        name = input("Enter new name: ")
        email = input("Enter new email address: ")
        additional_info = input("Enter new additional information: ")
        # Update contact details
        contacts[phone]['Name'] = name
        contacts[phone]['Email'] = email
        contacts[phone]['Additional Info'] = additional_info
        print("Contact details updated successfully!")
    else:
        print("Contact not found.")

# Function to delete a contact
def delete_contact():
    print("\nDeleting a contact:")
    phone = input("Enter phone number of the contact to delete: ")
    if phone in contacts:
        del contacts[phone]
        print("Contact deleted successfully!")
    else:
        print("Contact not found.")

# Function to search for a contact
def search_contact():
    print("\nSearching for a contact:")
    phone = input("Enter phone number of the contact to search: ")
    if phone in contacts:
        print("Contact found:")
        print(contacts[phone])
    else:
        print("Contact not found.")

# Function to display all contacts
def display_contacts():
    print("\nAll Contacts:")
    if contacts:
        for contact in contacts.values():
            print(contact)
    else:
        print("No contacts found.")

# Function to export contacts to a text file
def export_contacts():
    print("\nExporting contacts to a text file...")
    with open("contacts.txt", "w") as file:
        for contact in contacts.values():
            file.write(str(contact) + "\n")
    print("Contacts exported successfully!")

# Function to import contacts from a text file
def import_contacts():
    print("\nImporting contacts from a text file...")
    try:
        with open("contacts.txt", "r") as file:
            lines = file.readlines()
            for line in lines:
                contact = eval(line.strip())
                contacts[contact['Phone']] = contact
        print("Contacts imported successfully!")
    except FileNotFoundError:
        print("No contacts file found.")

# Function to save contacts to a JSON file
def save_contacts():
    with open(file_name, "w") as file:
        json.dump(contacts, file)

# Function to load contacts from a JSON file
def load_contacts():
    try:
        with open(file_name, "r") as file:
            return json.load(file)
    except FileNotFoundError:
        return {}

# Main function to run the program
def main():
    global contacts
    contacts = load_contacts()
    
    while True:
        display_menu()
        choice = input("Enter your choice: ")
        
        if choice == '1':
            add_contact()
        elif choice == '2':
            edit_contact()
        elif choice == '3':
            delete_contact()
        elif choice == '4':
            search_contact()
        elif choice == '5':
            display_contacts()
        elif choice == '6':
            export_contacts()
        elif choice == '7':
            import_contacts()
        elif choice == '8':
            save_contacts()
            print("Thank you for using the Contact Management System. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
